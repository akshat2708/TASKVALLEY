<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    
    <title>Talkvalley login </title>
    <style>
        * {
            margin: 0;
            
            padding: 0;
        }
     .container{
    margin-top: 18rem;
    margin-left: 35rem;
    border-radius: 10%;
    width: 80%;
    
    
    display: flex;
    max-width: 850px;
    
    border-radius: 15px;
    box-shadow: 0 10px 15px rgba(0, 0, 0, 0.1);
}

.login{
    width: 400px;
    background-color: #231f1f;
    border-radius: 10%;
}
form{
    width: 250px;
    margin: 60px auto;
}
h2{
    margin: 20px;
    text-align: center;
    font-weight: bolder;
    text-transform: uppercase;
}

p{
    text-align: center;
    margin: 10px;
}
hr{
    border-top: 2px solid rgb(0, 201, 241);
    margin-top:-5%;
}

.pic img{
    margin-top: 6rem;
    margin-left: 4rem;
    width: 300px;
    height: 60%;
   
}

form label{
    display: block;
    font-size: 16px;
    font-weight: 600;
    padding: 5px;
}
input{
    width: 100%;
    margin: 2px;
    border: none;
    outline: none;
    padding: 8px;
    border-radius: 5px;
    border: 1px solid gray;
}

#submit{
    border: none;
    outline: none;
    padding: 8px;
    width: 150px;
    color: #000000;
    font-size: 16px;
    cursor: pointer;
    margin-top: 10px;
    border-radius: 15px;
    background: rgb(4, 214, 229);
    margin-left: 20%;
    
}
.b2{
    margin: auto;
}
#submit:hover{
    background: rgb(0, 0, 0);
}
p{
    margin: 20px;
}
a{
    color: black;
    text-decoration: none;
}
.b2{
     
    width: 10rem;
    background-color: #3389fa;
    border-radius: 40%;
    color: white;

}


       

        ul li {
            color: rgb(255, 255, 255);
        }
       
        body{
            background-image: url("https://png.pngtree.com/thumb_back/fh260/background/20230407/pngtree-blue-wallpapers-free-cyan-background-images-victor-download-vector-image_2225660.jpg");
            background-repeat: no-repeat;
            background-size: 130%;
        }
    </style>
</head>

<body>
    <nav class="navbar navbar-inverse">
        <div class="container-fluid">
            <div class="navbar-header">
                <a class="navbar-brand" href="/"><img src="https://mentorstudents.org/images/LogoBlue.png"
                        style="width: 18rem;"></a>
            </div>
            <ul class="nav navbar-nav">
                <li><a href="login.html">Home</a></li>
                <li><a href="login.html" target="_blank">Login</a></li>
                <li><a href="reg.html" target="_blank">Registration</a></li>
            </ul>

        </div>
    </nav>
    <DIV><br>
   <h1 style="text-align: center; margin-top: 4rem;">Hi <%= name %> welcome to our website</h1><br>
   <h2>Click on Start Button to start the recording</h2>
   <button id ="start" onclick="fun1()" style="margin-left:45%;width: 7rem;background-color: aqua;color:#000000;">Start</button>
    <button  id ="stop" style="width: 7rem;background-color: aqua;color:#000000;">Stop</button>
    <form action="/logout" method="post">
        <button class="b2"type="submit" style="margin-left: 7rem;">LOGOUT</button>
    </form>
</DIV>
 
    <script>
    
    function fun1(){
        const co=confirm("Your device is being recorded")
        if(!co){
            alert("error")
        }
        else{
           
            let start = document.getElementById('start'),
        stop  = document.getElementById('stop'),
        mediaRecorder;
    
    start.addEventListener('click', async function(){
        let stream = await recordScreen();
        let mimeType = 'video/webm';
        mediaRecorder = createRecorder(stream, mimeType);
      let node = document.createElement("p");
        node.textContent = "Started recording";
        document.body.appendChild(node);
    })
    
    stop.addEventListener('click', function(){
        mediaRecorder.stop();
        let node = document.createElement("p");
        node.textContent = "Stopped recording";
        document.body.appendChild(node);
    })
    
    async function recordScreen() {
        return await navigator.mediaDevices.getDisplayMedia({
            audio: true, 
            video: { mediaSource: "screen"}
        });
    }
    
    function createRecorder (stream, mimeType) {
      // the stream data is stored in this array
      let recordedChunks = []; 
    
      const mediaRecorder = new MediaRecorder(stream);
    
      mediaRecorder.ondataavailable = function (e) {
        if (e.data.size > 0) {
          recordedChunks.push(e.data);
        }  
      };
      mediaRecorder.onstop = function () {
         saveFile(recordedChunks);
         recordedChunks = [];
      };
      mediaRecorder.start(200); // For every 200ms the stream data will be stored in a separate chunk.
      return mediaRecorder;
    }
    
    function saveFile(recordedChunks){
    
       const blob = new Blob(recordedChunks, {
          type: 'video/webm'
        });
        let filename = window.prompt('Enter file name'),
            downloadLink = document.createElement('a');
        downloadLink.href = URL.createObjectURL(blob);
        downloadLink.download = `${filename}.webm`;
    
        document.body.appendChild(downloadLink);
        downloadLink.click();
        URL.revokeObjectURL(blob); // clear from memory
        document.body.removeChild(downloadLink);
    }
     
        }
        
    }
    
    
     </script>
</body>
</html>

